name: 'Setup Python Env'
description: 'Setup Python Environment'

author: "CDQ AG"
branding:
  icon: 'hard-drive'
  color: 'blue'

inputs:
  python-version:
    description: 'Version of Python to use'
    default: '3.10'

  use-local-python3-if-possible:
    description: 'Should use local Python 3 if possible?'
    default: 'false'

  setup-virtualenv:
    description: 'Setup virtualenv'
    default: 'false'

  virtualenv-dir:
    description: 'Directory to setup virtualenv'
    default: '.venv'

  install-poetry:
    description: 'Install Poetry'
    default: 'false'

  poetry-version:
    description: 'Version of Poetry to use'
    default: '1.8.1'

  index-url:
    description: 'Index URL to set for pip - set empty to skip'
    default: ''

  install-dependencies:
    description: 'Install dependencies - skip if false; if install-poetry is true, it will use poetry to install dependencies, otherwise pip'
    default: 'true'

  install-packages:
    description: 'Install packages'
    default: ''

runs:
  using: 'composite'
  steps:
    - name: Check available Python
      id: check
      shell: bash
      env:
        USE_LOCAL_PYTHON_IF_POSSIBLE: ${{ inputs.use-local-python3-if-possible }}
      run: |
        if [ "$USE_LOCAL_PYTHON_IF_POSSIBLE" == 'true' ]; then
          if [ -x "$(command -v python3" ]; then
            echo "Local Python 3 is available"
            echo "localPython=true" >> $GITHUB_OUTPUT
          else
            echo "Local Python 3 is not available"
            echo "localPython=false" >> $GITHUB_OUTPUT
          fi
        else
          echo "Not using Python 3"
          echo "localPython=false" >> $GITHUB_OUTPUT
        fi

    - if: ${{ steps.check.outputs.localPython != 'true' }}
      name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ inputs.python-version }}

    - if: ${{ inputs.setup-virtualenv == 'true' }}
      name: Setup Virtual Envitonment
      shell: bash
      run: |
        if [ ! -x "$(command -v virtualenv)" ]; then
          python3 -m pip install --user virtualenv
        fi

        if [ ! -d "${{ inputs.virtualenv-dir }}" ]; then
          python3 -m virtualenv ${{ inputs.virtualenv-dir }}
        fi

        source ${{ inputs.virtualenv-dir }}/bin/activate
        echo "PATH=$PATH" >> $GITHUB_ENV

    - if: ${{ inputs.install-poetry == 'true' }}
      name: Install Poetry
      shell: bash
      run: |
        pip install poetry==${{ inputs.poetry-version }}

    - if: ${{ inputs.index-url != '' }}
      name: Set index URL
      shell: bash
      run: |
        echo "PIP_INDEX_URL=${{ inputs.index-url }}" >> $GITHUB_ENV

    - if: ${{ inputs.install-dependencies == 'true' && inputs.install-poetry == 'true' }}
      name: Install dependencies with poetry
      shell: bash
      run: |
        poetry install

    - if: ${{ inputs.install-dependencies == 'true' && inputs.install-poetry != 'true' }}
      name: Install dependencies with pip
      shell: bash
      run: |
        pip install -r requirements.txt

    - if: ${{ inputs.install-packages != '' }}
      name: Install packages
      shell: bash
      run: |
        pip install ${{ inputs.install-packages }}
